image:
  name: ${TF_CONTAINER_IMAGE}

stages:
  - generate-secrets
  - validate
  - plan
  - deploy
  - install

# REQUIRED - for child pipeline
workflow:
  rules:
    - when: always

cache:
  # key: "${TF_ROOT}"
  paths:
    - ${TF_ROOT}/.terraform/
    - ${CI_PROJECT_DIR}/deploy/.creds/

generate-secrets:
  stage: generate-secrets
  trigger:
    include: ${CI_PROJECT_DIR}/deploy/.gitlab-ci-generate-secrets.yml
    strategy: depend

terraform:fmt:
  stage: validate
  script:
    - gitlab-terraform fmt
  allow_failure: true

terraform:validate:
  stage: validate
  script:
    - pwd
    - ls ${CI_PROJECT_DIR}/deploy/.creds
    - gitlab-terraform validate

terraform:plan:
  stage: plan
  script:
    - gitlab-terraform plan -var project_root=${CI_PROJECT_DIR}
    - gitlab-terraform plan-json -var project_root=${CI_PROJECT_DIR}
  resource_group: ${TF_STATE_NAME}
  artifacts:
    # The next line, which disables public access to pipeline artifacts, may not be available everywhere.
    # See: https://docs.gitlab.com/ee/ci/yaml/#artifactspublic
    public: false
    paths:
      - ${TF_ROOT}/plan.cache
    reports:
      terraform: ${TF_ROOT}/plan.json

terraform:deploy:
  stage: deploy
  script:
    - gitlab-terraform apply
  resource_group: ${TF_STATE_NAME}
  # when: manual

vm:installation:
  image: google/cloud-sdk:alpine
  stage: install
  script:
    - gcloud auth login --cred-file=${CI_PROJECT_DIR}/deploy/.creds/gcloud_sa_compute_admin.json
    - gcloud -q compute scp ${CI_PROJECT_DIR}/deploy/vm_res/docker-compose.yml admin@votingly-testing-vm:/home/admin/votingly --zone "europe-west1-b" --project "int4t9"
    - gcloud -q compute scp ${CI_PROJECT_DIR}/deploy/vm_res/installation.sh admin@votingly-testing-vm:/tmp --zone "europe-west1-b" --project "int4t9" --strict-host-key-checking=no
    - gcloud -q compute ssh admin@votingly-testing-vm --zone "europe-west1-b" --project "int4t9" -- 'sudo bash /tmp/installation.sh'
  # when: manual
